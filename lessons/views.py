from django.views.generic import ListView, DetailView
from django.shortcuts import get_object_or_404
from django.db.models import Q, Count
from django.urls import reverse
from .models import Lesson, Exercise
import random


class LessonListView(ListView):
    """
    –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫—ñ–≤ –∑ –ø–æ—à—É–∫–æ–º, —Ñ—ñ–ª—å—Ç—Ä–æ–º –∑–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é —ñ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é.
    """
    model = Lesson
    template_name = 'lessons/lesson_list.html'
    context_object_name = 'lessons'
    paginate_by = 12
    ordering = ['-created_at']

    lessons = [
        {
            "slug": "energy-around-us",
            "title": "‚ö° –ï–Ω–µ—Ä–≥—ñ—è –Ω–∞–≤–∫–æ–ª–æ –Ω–∞—Å",
            "summary": "–©–æ —Ç–∞–∫–µ –µ–Ω–µ—Ä–≥—ñ—è? –Ø–∫ –≤–æ–Ω–∞ –ø—Ä–∞—Ü—é—î?",
            "level": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
            "duration": 20,
            "age_range": "6‚Äì9",
            "materials": "–º'—è—á, –ª—ñ—Ö—Ç–∞—Ä–∏–∫, —Ç–µ—Ä–º–æ—Å, –±–∞—Ç–∞—Ä–µ–π–∫–∞",
            "steps": "–†–æ–∑–≥–ª—è–Ω—å –ø—Ä–µ–¥–º–µ—Ç–∏; –ü–æ—è—Å–Ω–∏, —è–∫ –≤–æ–Ω–∏ –¥–∞—é—Ç—å –µ–Ω–µ—Ä–≥—ñ—é; –í–∏–∑–Ω–∞—á –≤–∏–¥ –µ–Ω–µ—Ä–≥—ñ—ó",
            "assistant_image": "images/assistant_boy.png",
            "theory": "–ï–Ω–µ—Ä–≥—ñ—è ‚Äî —Ü–µ —Ç–µ, —â–æ –∑–º—É—à—É—î –≤—Å–µ —Ä—É—Ö–∞—Ç–∏—Å—å, —Å–≤—ñ—Ç–∏—Ç–∏—Å—å, –Ω–∞–≥—Ä—ñ–≤–∞—Ç–∏—Å—å. –Ñ —Ä—ñ–∑–Ω—ñ –≤–∏–¥–∏ –µ–Ω–µ—Ä–≥—ñ—ó: —Ä—É—Ö, —Ç–µ–ø–ª–æ, —Å–≤—ñ—Ç–ª–æ, –∑–≤—É–∫.",
            "exercises": [
                {
                    "title": "–ï–Ω–µ—Ä–≥—ñ—è –≤ –¥—ñ—ó",
                    "instructions": "–ü–æ–∫–æ—Ç–∏ –º'—è—á, —É–≤—ñ–º–∫–Ω–∏ –ª—ñ—Ö—Ç–∞—Ä–∏–∫ ‚Äî —è–∫—ñ –≤–∏–¥–∏ –µ–Ω–µ—Ä–≥—ñ—ó —Ç–∏ –±–∞—á–∏—à?"
                },
                {
                    "title": "–•—Ç–æ –¥–∞—î –µ–Ω–µ—Ä–≥—ñ—é?",
                    "instructions": "–ó–Ω–∞–π–¥–∏ 3 –ø—Ä–µ–¥–º–µ—Ç–∏ –≤ –∫—ñ–º–Ω–∞—Ç—ñ, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å –∑–∞–≤–¥—è–∫–∏ –µ–Ω–µ—Ä–≥—ñ—ó."
                }
            ],
            "parent_notes": {
                "intro": "–ü–æ—è—Å–Ω—ñ—Ç—å –¥–∏—Ç–∏–Ω—ñ, —â–æ –µ–Ω–µ—Ä–≥—ñ—è ‚Äî —Ü–µ —Ç–µ, —â–æ –¥–æ–ø–æ–º–∞–≥–∞—î —Ä–µ—á–∞–º —Ä—É—Ö–∞—Ç–∏—Å—å –∞–±–æ —Å–≤—ñ—Ç–∏—Ç–∏—Å—å. –ü–æ–∫–∞–∂—ñ—Ç—å –Ω–∞ –ø—Ä–∏–∫–ª–∞–¥–∞—Ö: –º‚Äô—è—á —Ä—É—Ö–∞—î—Ç—å—Å—è ‚Äî —Ü–µ —Ä—É—Ö–æ–º–∞ –µ–Ω–µ—Ä–≥—ñ—è, –ª—ñ—Ö—Ç–∞—Ä–∏–∫ —Å–≤—ñ—Ç–∏—Ç—å—Å—è ‚Äî —Ü–µ —Å–≤—ñ—Ç–ª–æ–≤–∞ –µ–Ω–µ—Ä–≥—ñ—è.",
                "tips": [
                    "–°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞–π—Ç–µ —Ä–∞–∑–æ–º, —è–∫—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ —Å–≤—ñ—Ç—è—Ç—å—Å—è, –≥—Ä—ñ—é—Ç—å –∞–±–æ —Ä—É—Ö–∞—é—Ç—å—Å—è.",
                    "–ü–æ–≥—Ä–∞–π—Ç–µ —É –≥—Ä—É: –∑–Ω–∞–π–¥–∏ 5 —Ä–µ—á–µ–π, —è–∫—ñ —Å–ø–æ–∂–∏–≤–∞—é—Ç—å –µ–Ω–µ—Ä–≥—ñ—é."
                ],
                "questions": [
                    "–ê —Ç–∏ –º–æ–∂–µ—à –ø—Ä–∏–¥—É–º–∞—Ç–∏ —â–µ –ø—Ä–∏–∫–ª–∞–¥–∏ –µ–Ω–µ—Ä–≥—ñ—ó?",
                    "–Ø–∫–∞ –µ–Ω–µ—Ä–≥—ñ—è –ø–æ—Ç—Ä—ñ–±–Ω–∞, —â–æ–± –ø—Ä–∏–≥–æ—Ç—É–≤–∞—Ç–∏ —á–∞–π?"
                ]
            }
        },
        {
            "slug": "water-and-steam",
            "title": "üíß –í–æ–¥–∞ —ñ –ø–∞—Ä",
            "summary": "–Ø–∫ –≤–æ–¥–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ –ø–∞—Ä?",
            "level": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
            "duration": 20,
            "age_range": "6‚Äì9",
            "materials": "–±–∞–Ω–∫–∞ –∑ –≤–æ–¥–æ—é, —á–∞–π–Ω–∏–∫, –ª–æ–∂–∫–∞, –ª—ñ–¥",
            "steps": "–ù–∞–≥—Ä—ñ–π –≤–æ–¥—É; –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞–π –ø–∞—Ä; –ü–æ–¥–∏–≤–∏—Å—å, —è–∫ —Ç–∞–Ω–µ –ª—ñ–¥",
            "assistant_image": "images/assistant_girl.png",
            "theory": "–ö–æ–ª–∏ –≤–æ–¥–∞ –Ω–∞–≥—Ä—ñ–≤–∞—î—Ç—å—Å—è ‚Äî –≤–æ–Ω–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ –ø–∞—Ä. –ê –∫–æ–ª–∏ –æ—Ö–æ–ª–æ–¥–∂—É—î—Ç—å—Å—è ‚Äî —Å—Ç–∞—î –ª—å–æ–¥–æ–º.",
            "exercises": [
                {
                    "title": "–î–∏–º –∑ —á–∞–π–Ω–∏–∫–∞",
                    "instructions": "–°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞–π, —è–∫ –∑ —á–∞–π–Ω–∏–∫–∞ –π–¥–µ –ø–∞—Ä. –¶–µ ‚Äî –≤–æ–¥–∞ –≤ –≥–∞–∑–æ–ø–æ–¥—ñ–±–Ω–æ–º—É —Å—Ç–∞–Ω—ñ."
                },
                {
                    "title": "–¢–∞–Ω–µ–Ω–Ω—è –ª—å–æ–¥—É",
                    "instructions": "–ü–æ–∫–ª–∞–¥–∏ –ª—ñ–¥ –Ω–∞ –ª–æ–∂–∫—É. –Ø–∫ –≤—ñ–Ω –∑–º—ñ–Ω—é—î—Ç—å—Å—è –∑ —á–∞—Å–æ–º?"
                }
            ],
            "parent_notes": {
                "intro": "–¶–µ–π —É—Ä–æ–∫ –¥–æ–±—Ä–µ —ñ–ª—é—Å—Ç—Ä—É—î –∑–º—ñ–Ω—É —Å—Ç–∞–Ω—ñ–≤ —Ä–µ—á–æ–≤–∏–Ω–∏. –ü–æ—è—Å–Ω—ñ—Ç—å –¥–∏—Ç–∏–Ω—ñ, —â–æ –≤–æ–¥–∞ –º–æ–∂–µ –±—É—Ç–∏ —Ä—ñ–¥–∏–Ω–æ—é, –ø–∞—Ä–æ—é –∞–±–æ –ª—å–æ–¥–æ–º, –∞–ª–µ –∑–∞–≤–∂–¥–∏ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –≤–æ–¥–æ—é.",
                "tips": [
                    "–ü—Ä–æ–≤–µ–¥—ñ—Ç—å –¥–æ—Å–ª—ñ–¥: –ª—ñ–¥ ‚Üí –≤–æ–¥–∞ ‚Üí –ø–∞—Ä.",
                    "–ü–æ—è—Å–Ω—ñ—Ç—å, —â–æ '–¥–∏–º' –Ω–∞–¥ —á–∞–π–Ω–∏–∫–æ–º ‚Äî —Ü–µ –º—ñ–∫—Ä–æ–∫—Ä–∞–ø–ª—ñ –≤–æ–¥–∏."
                ],
                "questions": [
                    "–ß–æ–º—É —á–∞–π–Ω–∏–∫ '–¥–∏–º–∏—Ç—å'?",
                    "–ß–∏ —Å–ø—Ä–∞–≤–¥—ñ –ø–∞—Ä –≤–∏–¥–Ω–æ?"
                ]
            }
        },
        {
            "slug": "electricity-and-safety",
            "title": "üîå –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ —ñ –±–µ–∑–ø–µ–∫–∞",
            "summary": "–©–æ —Ç–∞–∫–µ —Å—Ç—Ä—É–º? –Ø–∫ –±—É—Ç–∏ –æ–±–µ—Ä–µ–∂–Ω–∏–º?",
            "level": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
            "duration": 25,
            "age_range": "6‚Äì9",
            "materials": "–±–∞—Ç–∞—Ä–µ–π–∫–∞, –ª–∞–º–ø–æ—á–∫–∞, –¥—Ä–æ—Ç–∏, —Å—Ö–µ–º–∏",
            "steps": "–ó–±–µ—Ä–∏ –ª–∞–Ω—Ü—é–≥; –£–≤—ñ–º–∫–Ω–∏ –ª–∞–º–ø–æ—á–∫—É; –û–±–≥–æ–≤–æ—Ä–∏ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–ø–µ–∫–∏",
            "assistant_image": "images/assistant_boy.png",
            "theory": "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞ ‚Äî —Ü–µ –µ–Ω–µ—Ä–≥—ñ—è, —è–∫–∞ —Ä—É—Ö–∞—î—Ç—å—Å—è –ø–æ –¥—Ä–æ—Ç–∞—Ö. –í–æ–Ω–∞ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ—é, —è–∫—â–æ –Ω–µ—é –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å.",
            "exercises": [
                {
                    "title": "–õ–∞–º–ø–æ—á–∫–∞ —Å–≤—ñ—Ç–∏—Ç—å—Å—è",
                    "instructions": "–ó–±–µ—Ä–∏ –ø—Ä–æ—Å—Ç–∏–π –ª–∞–Ω—Ü—é–≥ —ñ–∑ –±–∞—Ç–∞—Ä–µ–π–∫–∏, –ª–∞–º–ø–æ—á–∫–∏ —ñ –¥—Ä–æ—Ç—ñ–≤."
                },
                {
                    "title": "–ë–µ–∑–ø–µ—á–Ω–∞ –µ–ª–µ–∫—Ç—Ä–∏–∫–∞",
                    "instructions": "–ù–∞–∑–≤–∏ 3 –ø—Ä–∞–≤–∏–ª–∞, —è–∫ –±–µ–∑–ø–µ—á–Ω–æ –ø–æ–≤–æ–¥–∏—Ç–∏—Å—å —ñ–∑ —Ä–æ–∑–µ—Ç–∫–∞–º–∏ –π –ø—Ä–∏–ª–∞–¥–∞–º–∏."
                }
            ],
            "parent_notes": {
                "intro": "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞ –∫–æ—Ä–∏—Å–Ω–∞, –∞–ª–µ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∞. –î–∏—Ç–∏–Ω–∞ –º–∞—î —Ä–æ–∑—É–º—ñ—Ç–∏, —â–æ –∑ –Ω–µ—é –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É—Ç–∏ –æ–±–µ—Ä–µ–∂–Ω–æ—é.",
                "tips": [
                    "–ü–æ–∫–∞–∂—ñ—Ç—å –ø–æ–±—É—Ç–æ–≤—ñ –ø—Ä–∏–ª–∞–¥–∏ –π –ø–æ—è—Å–Ω—ñ—Ç—å, —è–∫ –≤–æ–Ω–∏ –ø—Ä–∞—Ü—é—é—Ç—å.",
                    "–ó–±–µ—Ä—ñ—Ç—å —Ä–∞–∑–æ–º –ø—Ä–æ—Å—Ç–µ –∫–æ–ª–æ –∑ –ª–∞–º–ø–æ—á–∫–æ—é –π –±–∞—Ç–∞—Ä–µ–π–∫–æ—é."
                ],
                "questions": [
                    "–ß–æ–º—É –Ω–µ –º–æ–∂–Ω–∞ –≤—Å—Ç–∞–≤–ª—è—Ç–∏ –Ω—ñ—á–æ–≥–æ –≤ —Ä–æ–∑–µ—Ç–∫—É?",
                    "–Ø–∫—ñ –ø—Ä–∏–ª–∞–¥–∏ –≤–¥–æ–º–∞ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞ –µ–ª–µ–∫—Ç—Ä–∏—Ü—ñ?"
                ]
            }
        },
        {
            "slug": "levers-and-balance",
            "title": "‚öñÔ∏è –í–∞–∂–µ–ª—ñ —ñ —Ä—ñ–≤–Ω–æ–≤–∞–≥–∞",
            "summary": "–Ø–∫ –ø—Ä–∞—Ü—é—î –≥–æ–π–¥–∞–ª–∫–∞? –©–æ —Ç–∞–∫–µ –±–∞–ª–∞–Ω—Å?",
            "level": "—Å–µ—Ä–µ–¥–Ω—ñ–π",
            "duration": 20,
            "age_range": "6‚Äì9",
            "materials": "–¥–æ—à–∫–∞, –æ–ª—ñ–≤–µ—Ü—å, —Ñ—ñ—à–∫–∏ –∞–±–æ –º–æ–Ω–µ—Ç–∏",
            "steps": "–ó—Ä–æ–±–∏ –≥–æ–π–¥–∞–ª–∫—É; –†–æ–∑–∫–ª–∞–¥–∏ –≤–∞–Ω—Ç–∞–∂—ñ; –®—É–∫–∞–π —Ä—ñ–≤–Ω–æ–≤–∞–≥—É",
            "assistant_image": "images/assistant_girl.png",
            "theory": "–í–∞–∂—ñ–ª—å ‚Äî —Ü–µ –ø—Ä–∏—Å—Ç—Ä—ñ–π, —â–æ –¥–æ–∑–≤–æ–ª—è—î –ª–µ–≥–∫–æ –ø—ñ–¥–Ω—ñ–º–∞—Ç–∏ –∞–±–æ –±–∞–ª–∞–Ω—Å—É–≤–∞—Ç–∏ —â–æ—Å—å. –Ø–∫—â–æ –æ–±–∏–¥–≤–∞ –±–æ–∫–∏ –≤–∞–∂–∞—Ç—å –æ–¥–Ω–∞–∫–æ–≤–æ ‚Äî —î —Ä—ñ–≤–Ω–æ–≤–∞–≥–∞.",
            "exercises": [
                {
                    "title": "–ì–æ–π–¥–∞–ª–∫–∞ –≤ —Ä—ñ–≤–Ω–æ–≤–∞–∑—ñ",
                    "instructions": "–†–æ–∑–º—ñ—Å—Ç–∏ —Ñ—ñ—à–∫–∏ –Ω–∞ –¥–æ—à—Ü—ñ. –ö–æ–ª–∏ –≤–æ–Ω–∞ –±—É–¥–µ –≤ –±–∞–ª–∞–Ω—Å—ñ?"
                },
                {
                    "title": "–°–∏–ª–∞ —ñ –≤—ñ–¥—Å—Ç–∞–Ω—å",
                    "instructions": "–©–æ –±—É–¥–µ, —è–∫—â–æ —Ñ—ñ—à–∫—É –ø–æ–∫–ª–∞—Å—Ç–∏ –±–ª–∏–∂—á–µ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω–∏ –∞–±–æ –¥–∞–ª—ñ?"
                }
            ],
            "parent_notes": {
                "intro": "–í–∞–∂–µ–ª—ñ ‚Äî –ø—Ä–∏–∫–ª–∞–¥ —Ç–æ–≥–æ, —è–∫ —Ñ—ñ–∑–∏–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –≤ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–º—É –∂–∏—Ç—Ç—ñ. –ì–æ–π–¥–∞–ª–∫–∏, –Ω–æ–∂–∏—Ü—ñ, –¥–≤–µ—Ä–Ω–∞ —Ä—É—á–∫–∞ ‚Äî –≤—Å–µ —Ü–µ –≤–∞–∂–µ–ª—ñ.",
                "tips": [
                    "–ü–æ–≥—Ä–∞–π—Ç–µ –∑ –¥–∏—Ç–∏–Ω–æ—é –≤ —Ä—ñ–≤–Ω–æ–≤–∞–≥—É: —Ñ—ñ—à–∫–∏, –æ–ª—ñ–≤–µ—Ü—å, –¥–æ—à–∫–∞.",
                    "–ü–æ—è—Å–Ω—ñ—Ç—å, —â–æ –≤–∞–∂—ñ–ª—å –¥–∞—î –ø–µ—Ä–µ–≤–∞–≥—É —É –∑—É—Å–∏–ª–ª—ñ."
                ],
                "questions": [
                    "–î–µ —Ç–∏ –±–∞—á–∏–≤(–ª–∞) –≤–∞–∂–µ–ª—ñ —É –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–º—É –∂–∏—Ç—Ç—ñ?",
                    "–©–æ –¥–æ–ø–æ–º–∞–≥–∞—î –≥–æ–π–¥–∞–ª—Ü—ñ –∑–∞–ª–∏—à–∞—Ç–∏—Å—å —É –±–∞–ª–∞–Ω—Å—ñ?"
                ]
            }
        }
    ]

    def get_queryset(self):
        qs = (
            Lesson.objects
            .all()
            .annotate(exercises_count=Count('exercises', distinct=True))
        )

        q = self.request.GET.get('q', '').strip()
        level = self.request.GET.get('level', '').strip()

        if q:
            qs = qs.filter(
                Q(title__icontains=q) |
                Q(summary__icontains=q) |
                Q(materials__icontains=q) |
                Q(steps__icontains=q)
            )

        if level:
            qs = qs.filter(level=level)

        return qs.order_by(*self.ordering)

    def get_context_data(self, **kwargs):
        ctx = super().get_context_data(**kwargs)
        ctx['q'] = self.request.GET.get('q', '')
        ctx['level'] = self.request.GET.get('level', '')
        parent_notes = lesson.get('parent_notes', {}) if isinstance(lesson, dict) else getattr(lesson, 'parent_notes',
                                                                                               {}) or {}
        context['parent_notes_intro'] = parent_notes.get('intro')
        context['parent_notes_tips'] = parent_notes.get('tips', [])
        context['parent_notes_questions'] = parent_notes.get('questions', [])

        return ctx


class LessonDetailView(DetailView):
    """
    –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —É—Ä–æ–∫—É –∑ –≤–ø—Ä–∞–≤–∞–º–∏, –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏, –∫—Ä–æ–∫–∞–º–∏ —Ç–∞ –∞—Å–∏—Å—Ç–µ–Ω—Ç–æ–º.
    """
    model = Lesson
    template_name = 'lessons/lesson_detail.html'
    context_object_name = 'lesson'
    slug_url_kwarg = 'lesson_slug'

    def get_queryset(self):
        return Lesson.objects.prefetch_related('exercises')

    def _split_field(self, value, sep):
        if not value:
            return []
        if isinstance(value, (list, tuple)):
            return [s for s in value if str(s).strip()]
        return [s.strip() for s in str(value).split(sep) if s.strip()]

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        lesson = context['lesson']

        # –í–ø—Ä–∞–≤–∏
        exercises_qs = lesson.exercises.all()
        if 'order' in [f.name for f in Exercise._meta.fields]:
            exercises_qs = exercises_qs.order_by('order', 'id')
        else:
            exercises_qs = exercises_qs.order_by('created_at', 'id')
        context['exercises'] = exercises_qs

        # –ú–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –∫—Ä–æ–∫–∏
        context['materials_list'] = self._split_field(lesson.materials, ',')
        context['steps_list'] = self._split_field(lesson.steps, ';')

        # –°—Ö–æ–∂—ñ —É—Ä–æ–∫–∏
        context['related_lessons'] = Lesson.objects.exclude(pk=lesson.pk).filter(level=lesson.level)[:6]

        # –í–∏–ø–∞–¥–∫–æ–≤—ñ (—Å—é—Ä–ø—Ä–∏–∑)
        context['random_lessons'] = Lesson.objects.exclude(pk=lesson.pk).order_by('?')[:5]

        # –ê—Å–∏—Å—Ç–µ–Ω—Ç (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ, —è–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ)
        if not lesson.assistant_image:
            title = lesson.title.lower()
            if '–∑–≤—É–∫' in title or '–≤—ñ–±—Ä–∞—Ü' in title:
                context['assistant_image'] = 'images/assistant_boy.png'
            elif '—Å–≤—ñ—Ç–ª–æ' in title or '—Ç—ñ–Ω' in title:
                context['assistant_image'] = 'images/assistant_girl.png'
            elif '—à–≤–∏–¥–∫—ñ—Å—Ç—å' in title or '—Ç—ñ–Ω' in title:
                context['assistant_image'] = 'images/assistant_rainbow .png'
            else:
                context['assistant_image'] = random.choice([
                    'images/assistant_boy.png',
                    'images/assistant_girl.png',
                    'images/assistant_rainbow.png'
                ])
        else:
            context['assistant_image'] = lesson.assistant_image

        return context


class ExerciseListView(ListView):
    """
    –í—Å—ñ –≤–ø—Ä–∞–≤–∏ (–∞–±–æ –≤–ø—Ä–∞–≤–∏ –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Ä–æ–∫—É).
    """
    model = Exercise
    template_name = "lessons/exercise_list.html"
    context_object_name = "exercises"
    paginate_by = 12

    def get_queryset(self):
        qs = super().get_queryset().select_related("lesson").order_by("lesson__title", "id")
        lesson_slug = self.kwargs.get("lesson_slug")
        if lesson_slug:
            self.lesson = get_object_or_404(Lesson, slug=lesson_slug)
            qs = qs.filter(lesson=self.lesson)
        return qs

    def get_context_data(self, **kwargs):
        ctx = super().get_context_data(**kwargs)
        if hasattr(self, "lesson"):
            ctx["lesson"] = self.lesson
        return ctx


class ExerciseDetailView(DetailView):
    """
    –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≤–ø—Ä–∞–≤–∏.
    """
    model = Exercise
    template_name = "lessons/exercise_detail.html"
    context_object_name = "exercise"
    slug_url_kwarg = "exercise_slug"